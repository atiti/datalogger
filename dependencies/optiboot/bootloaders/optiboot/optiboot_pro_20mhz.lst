
optiboot_pro_20mhz.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001fa  00003e00  00003e00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b58  00000000  00000000  00000250  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000a4a  00000000  00000000  00000da8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00003e00 <main>:
    3e00:	84 b7       	in	r24, 0x34	; 52
    3e02:	14 be       	out	0x34, r1	; 52
    3e04:	81 ff       	sbrs	r24, 1
    3e06:	e6 d0       	rcall	.+460    	; 0x3fd4 <appStart>
    3e08:	85 e0       	ldi	r24, 0x05	; 5
    3e0a:	80 93 81 00 	sts	0x0081, r24
    3e0e:	82 e0       	ldi	r24, 0x02	; 2
    3e10:	80 93 c0 00 	sts	0x00C0, r24
    3e14:	88 e1       	ldi	r24, 0x18	; 24
    3e16:	80 93 c1 00 	sts	0x00C1, r24
    3e1a:	86 e0       	ldi	r24, 0x06	; 6
    3e1c:	80 93 c2 00 	sts	0x00C2, r24
    3e20:	85 e1       	ldi	r24, 0x15	; 21
    3e22:	80 93 c4 00 	sts	0x00C4, r24
    3e26:	8e e0       	ldi	r24, 0x0E	; 14
    3e28:	cf d0       	rcall	.+414    	; 0x3fc8 <watchdogConfig>
    3e2a:	25 9a       	sbi	0x04, 5	; 4
    3e2c:	86 e0       	ldi	r24, 0x06	; 6
    3e2e:	2c e3       	ldi	r18, 0x3C	; 60
    3e30:	3b ef       	ldi	r19, 0xFB	; 251
    3e32:	91 e0       	ldi	r25, 0x01	; 1
    3e34:	30 93 85 00 	sts	0x0085, r19
    3e38:	20 93 84 00 	sts	0x0084, r18
    3e3c:	96 bb       	out	0x16, r25	; 22
    3e3e:	b0 9b       	sbis	0x16, 0	; 22
    3e40:	fe cf       	rjmp	.-4      	; 0x3e3e <main+0x3e>
    3e42:	1d 9a       	sbi	0x03, 5	; 3
    3e44:	a8 95       	wdr
    3e46:	81 50       	subi	r24, 0x01	; 1
    3e48:	a9 f7       	brne	.-22     	; 0x3e34 <main+0x34>
    3e4a:	dd 24       	eor	r13, r13
    3e4c:	d3 94       	inc	r13
    3e4e:	a5 e0       	ldi	r26, 0x05	; 5
    3e50:	ea 2e       	mov	r14, r26
    3e52:	f1 e1       	ldi	r31, 0x11	; 17
    3e54:	ff 2e       	mov	r15, r31
    3e56:	ab d0       	rcall	.+342    	; 0x3fae <getch>
    3e58:	81 34       	cpi	r24, 0x41	; 65
    3e5a:	21 f4       	brne	.+8      	; 0x3e64 <main+0x64>
    3e5c:	81 e0       	ldi	r24, 0x01	; 1
    3e5e:	c5 d0       	rcall	.+394    	; 0x3fea <getNch>
    3e60:	83 e0       	ldi	r24, 0x03	; 3
    3e62:	20 c0       	rjmp	.+64     	; 0x3ea4 <main+0xa4>
    3e64:	82 34       	cpi	r24, 0x42	; 66
    3e66:	11 f4       	brne	.+4      	; 0x3e6c <main+0x6c>
    3e68:	84 e1       	ldi	r24, 0x14	; 20
    3e6a:	03 c0       	rjmp	.+6      	; 0x3e72 <main+0x72>
    3e6c:	85 34       	cpi	r24, 0x45	; 69
    3e6e:	19 f4       	brne	.+6      	; 0x3e76 <main+0x76>
    3e70:	85 e0       	ldi	r24, 0x05	; 5
    3e72:	bb d0       	rcall	.+374    	; 0x3fea <getNch>
    3e74:	91 c0       	rjmp	.+290    	; 0x3f98 <main+0x198>
    3e76:	85 35       	cpi	r24, 0x55	; 85
    3e78:	81 f4       	brne	.+32     	; 0x3e9a <main+0x9a>
    3e7a:	99 d0       	rcall	.+306    	; 0x3fae <getch>
    3e7c:	08 2f       	mov	r16, r24
    3e7e:	10 e0       	ldi	r17, 0x00	; 0
    3e80:	96 d0       	rcall	.+300    	; 0x3fae <getch>
    3e82:	90 e0       	ldi	r25, 0x00	; 0
    3e84:	98 2f       	mov	r25, r24
    3e86:	88 27       	eor	r24, r24
    3e88:	80 2b       	or	r24, r16
    3e8a:	91 2b       	or	r25, r17
    3e8c:	88 0f       	add	r24, r24
    3e8e:	99 1f       	adc	r25, r25
    3e90:	90 93 01 02 	sts	0x0201, r25
    3e94:	80 93 00 02 	sts	0x0200, r24
    3e98:	7e c0       	rjmp	.+252    	; 0x3f96 <main+0x196>
    3e9a:	86 35       	cpi	r24, 0x56	; 86
    3e9c:	29 f4       	brne	.+10     	; 0x3ea8 <main+0xa8>
    3e9e:	84 e0       	ldi	r24, 0x04	; 4
    3ea0:	a4 d0       	rcall	.+328    	; 0x3fea <getNch>
    3ea2:	80 e0       	ldi	r24, 0x00	; 0
    3ea4:	7c d0       	rcall	.+248    	; 0x3f9e <putch>
    3ea6:	78 c0       	rjmp	.+240    	; 0x3f98 <main+0x198>
    3ea8:	84 36       	cpi	r24, 0x64	; 100
    3eaa:	09 f0       	breq	.+2      	; 0x3eae <main+0xae>
    3eac:	4e c0       	rjmp	.+156    	; 0x3f4a <main+0x14a>
    3eae:	87 d0       	rcall	.+270    	; 0x3fbe <getLen>
    3eb0:	e0 91 00 02 	lds	r30, 0x0200
    3eb4:	f0 91 01 02 	lds	r31, 0x0201
    3eb8:	88 e3       	ldi	r24, 0x38	; 56
    3eba:	e0 30       	cpi	r30, 0x00	; 0
    3ebc:	f8 07       	cpc	r31, r24
    3ebe:	18 f4       	brcc	.+6      	; 0x3ec6 <main+0xc6>
    3ec0:	83 e0       	ldi	r24, 0x03	; 3
    3ec2:	87 bf       	out	0x37, r24	; 55
    3ec4:	e8 95       	spm
    3ec6:	c0 e0       	ldi	r28, 0x00	; 0
    3ec8:	d1 e0       	ldi	r29, 0x01	; 1
    3eca:	71 d0       	rcall	.+226    	; 0x3fae <getch>
    3ecc:	89 93       	st	Y+, r24
    3ece:	80 91 02 02 	lds	r24, 0x0202
    3ed2:	81 50       	subi	r24, 0x01	; 1
    3ed4:	80 93 02 02 	sts	0x0202, r24
    3ed8:	88 23       	and	r24, r24
    3eda:	b9 f7       	brne	.-18     	; 0x3eca <main+0xca>
    3edc:	e0 91 00 02 	lds	r30, 0x0200
    3ee0:	f0 91 01 02 	lds	r31, 0x0201
    3ee4:	88 e3       	ldi	r24, 0x38	; 56
    3ee6:	e0 30       	cpi	r30, 0x00	; 0
    3ee8:	f8 07       	cpc	r31, r24
    3eea:	18 f0       	brcs	.+6      	; 0x3ef2 <main+0xf2>
    3eec:	83 e0       	ldi	r24, 0x03	; 3
    3eee:	87 bf       	out	0x37, r24	; 55
    3ef0:	e8 95       	spm
    3ef2:	75 d0       	rcall	.+234    	; 0x3fde <verifySpace>
    3ef4:	07 b6       	in	r0, 0x37	; 55
    3ef6:	00 fc       	sbrc	r0, 0
    3ef8:	fd cf       	rjmp	.-6      	; 0x3ef4 <main+0xf4>
    3efa:	40 91 00 02 	lds	r20, 0x0200
    3efe:	50 91 01 02 	lds	r21, 0x0201
    3f02:	a0 e0       	ldi	r26, 0x00	; 0
    3f04:	b1 e0       	ldi	r27, 0x01	; 1
    3f06:	2c 91       	ld	r18, X
    3f08:	30 e0       	ldi	r19, 0x00	; 0
    3f0a:	11 96       	adiw	r26, 0x01	; 1
    3f0c:	8c 91       	ld	r24, X
    3f0e:	11 97       	sbiw	r26, 0x01	; 1
    3f10:	90 e0       	ldi	r25, 0x00	; 0
    3f12:	98 2f       	mov	r25, r24
    3f14:	88 27       	eor	r24, r24
    3f16:	82 2b       	or	r24, r18
    3f18:	93 2b       	or	r25, r19
    3f1a:	12 96       	adiw	r26, 0x02	; 2
    3f1c:	fa 01       	movw	r30, r20
    3f1e:	0c 01       	movw	r0, r24
    3f20:	d7 be       	out	0x37, r13	; 55
    3f22:	e8 95       	spm
    3f24:	11 24       	eor	r1, r1
    3f26:	4e 5f       	subi	r20, 0xFE	; 254
    3f28:	5f 4f       	sbci	r21, 0xFF	; 255
    3f2a:	f1 e0       	ldi	r31, 0x01	; 1
    3f2c:	a0 38       	cpi	r26, 0x80	; 128
    3f2e:	bf 07       	cpc	r27, r31
    3f30:	51 f7       	brne	.-44     	; 0x3f06 <main+0x106>
    3f32:	e0 91 00 02 	lds	r30, 0x0200
    3f36:	f0 91 01 02 	lds	r31, 0x0201
    3f3a:	e7 be       	out	0x37, r14	; 55
    3f3c:	e8 95       	spm
    3f3e:	07 b6       	in	r0, 0x37	; 55
    3f40:	00 fc       	sbrc	r0, 0
    3f42:	fd cf       	rjmp	.-6      	; 0x3f3e <main+0x13e>
    3f44:	f7 be       	out	0x37, r15	; 55
    3f46:	e8 95       	spm
    3f48:	27 c0       	rjmp	.+78     	; 0x3f98 <main+0x198>
    3f4a:	84 37       	cpi	r24, 0x74	; 116
    3f4c:	b9 f4       	brne	.+46     	; 0x3f7c <main+0x17c>
    3f4e:	37 d0       	rcall	.+110    	; 0x3fbe <getLen>
    3f50:	46 d0       	rcall	.+140    	; 0x3fde <verifySpace>
    3f52:	e0 91 00 02 	lds	r30, 0x0200
    3f56:	f0 91 01 02 	lds	r31, 0x0201
    3f5a:	31 96       	adiw	r30, 0x01	; 1
    3f5c:	f0 93 01 02 	sts	0x0201, r31
    3f60:	e0 93 00 02 	sts	0x0200, r30
    3f64:	31 97       	sbiw	r30, 0x01	; 1
    3f66:	e4 91       	lpm	r30, Z+
    3f68:	8e 2f       	mov	r24, r30
    3f6a:	19 d0       	rcall	.+50     	; 0x3f9e <putch>
    3f6c:	80 91 02 02 	lds	r24, 0x0202
    3f70:	81 50       	subi	r24, 0x01	; 1
    3f72:	80 93 02 02 	sts	0x0202, r24
    3f76:	88 23       	and	r24, r24
    3f78:	61 f7       	brne	.-40     	; 0x3f52 <main+0x152>
    3f7a:	0e c0       	rjmp	.+28     	; 0x3f98 <main+0x198>
    3f7c:	85 37       	cpi	r24, 0x75	; 117
    3f7e:	39 f4       	brne	.+14     	; 0x3f8e <main+0x18e>
    3f80:	2e d0       	rcall	.+92     	; 0x3fde <verifySpace>
    3f82:	8e e1       	ldi	r24, 0x1E	; 30
    3f84:	0c d0       	rcall	.+24     	; 0x3f9e <putch>
    3f86:	84 e9       	ldi	r24, 0x94	; 148
    3f88:	0a d0       	rcall	.+20     	; 0x3f9e <putch>
    3f8a:	86 e0       	ldi	r24, 0x06	; 6
    3f8c:	8b cf       	rjmp	.-234    	; 0x3ea4 <main+0xa4>
    3f8e:	81 35       	cpi	r24, 0x51	; 81
    3f90:	11 f4       	brne	.+4      	; 0x3f96 <main+0x196>
    3f92:	88 e0       	ldi	r24, 0x08	; 8
    3f94:	19 d0       	rcall	.+50     	; 0x3fc8 <watchdogConfig>
    3f96:	23 d0       	rcall	.+70     	; 0x3fde <verifySpace>
    3f98:	80 e1       	ldi	r24, 0x10	; 16
    3f9a:	01 d0       	rcall	.+2      	; 0x3f9e <putch>
    3f9c:	5c cf       	rjmp	.-328    	; 0x3e56 <main+0x56>

00003f9e <putch>:
    }
    putch(STK_OK);
  }
}

void putch(char ch) {
    3f9e:	98 2f       	mov	r25, r24
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
    3fa0:	80 91 c0 00 	lds	r24, 0x00C0
    3fa4:	85 ff       	sbrs	r24, 5
    3fa6:	fc cf       	rjmp	.-8      	; 0x3fa0 <putch+0x2>
  UDR0 = ch;
    3fa8:	90 93 c6 00 	sts	0x00C6, r25
      [uartBit] "I" (UART_TX_BIT)
    :
      "r25"
  );
#endif
}
    3fac:	08 95       	ret

00003fae <getch>:
  return getch();
}

// Watchdog functions. These are only safe with interrupts turned off.
void watchdogReset() {
  __asm__ __volatile__ (
    3fae:	a8 95       	wdr
      [uartBit] "I" (UART_RX_BIT)
    :
      "r25"
);
#else
  while(!(UCSR0A & _BV(RXC0)));
    3fb0:	80 91 c0 00 	lds	r24, 0x00C0
    3fb4:	87 ff       	sbrs	r24, 7
    3fb6:	fc cf       	rjmp	.-8      	; 0x3fb0 <getch+0x2>
  ch = UDR0;
    3fb8:	80 91 c6 00 	lds	r24, 0x00C6
  LED_PIN |= _BV(LED);
#endif
#endif

  return ch;
}
    3fbc:	08 95       	ret

00003fbe <getLen>:
  } while (--count);
}
#endif

uint8_t getLen() {
  getch();
    3fbe:	f7 df       	rcall	.-18     	; 0x3fae <getch>
  length = getch();
    3fc0:	f6 df       	rcall	.-20     	; 0x3fae <getch>
    3fc2:	80 93 02 02 	sts	0x0202, r24
  return getch();
    3fc6:	f3 cf       	rjmp	.-26     	; 0x3fae <getch>

00003fc8 <watchdogConfig>:
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    3fc8:	e0 e6       	ldi	r30, 0x60	; 96
    3fca:	f0 e0       	ldi	r31, 0x00	; 0
    3fcc:	98 e1       	ldi	r25, 0x18	; 24
    3fce:	90 83       	st	Z, r25
  WDTCSR = x;
    3fd0:	80 83       	st	Z, r24
}
    3fd2:	08 95       	ret

00003fd4 <appStart>:

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
    3fd4:	80 e0       	ldi	r24, 0x00	; 0
    3fd6:	f8 df       	rcall	.-16     	; 0x3fc8 <watchdogConfig>
  __asm__ __volatile__ (
    3fd8:	ee 27       	eor	r30, r30
    3fda:	ff 27       	eor	r31, r31
    3fdc:	09 94       	ijmp

00003fde <verifySpace>:
  do getch(); while (--count);
  verifySpace();
}

void verifySpace() {
  if (getch() != CRC_EOP) appStart();
    3fde:	e7 df       	rcall	.-50     	; 0x3fae <getch>
    3fe0:	80 32       	cpi	r24, 0x20	; 32
    3fe2:	09 f0       	breq	.+2      	; 0x3fe6 <verifySpace+0x8>
    3fe4:	f7 df       	rcall	.-18     	; 0x3fd4 <appStart>
  putch(STK_INSYNC);
    3fe6:	84 e1       	ldi	r24, 0x14	; 20
    3fe8:	da cf       	rjmp	.-76     	; 0x3f9e <putch>

00003fea <getNch>:
    ::[count] "M" (UART_B_VALUE)
  );
}
#endif

void getNch(uint8_t count) {
    3fea:	1f 93       	push	r17
    3fec:	18 2f       	mov	r17, r24
  do getch(); while (--count);
    3fee:	df df       	rcall	.-66     	; 0x3fae <getch>
    3ff0:	11 50       	subi	r17, 0x01	; 1
    3ff2:	e9 f7       	brne	.-6      	; 0x3fee <getNch+0x4>
  verifySpace();
    3ff4:	f4 df       	rcall	.-24     	; 0x3fde <verifySpace>
}
    3ff6:	1f 91       	pop	r17
    3ff8:	08 95       	ret
