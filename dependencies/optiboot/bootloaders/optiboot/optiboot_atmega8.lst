
optiboot_atmega8.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001ea  00001e00  00001e00  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b70  00000000  00000000  00000240  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000a35  00000000  00000000  00000db0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00001e00 <main>:
    1e00:	8f e5       	ldi	r24, 0x5F	; 95
    1e02:	94 e0       	ldi	r25, 0x04	; 4
    1e04:	9e bf       	out	0x3e, r25	; 62
    1e06:	8d bf       	out	0x3d, r24	; 61
    1e08:	84 b7       	in	r24, 0x34	; 52
    1e0a:	14 be       	out	0x34, r1	; 52
    1e0c:	81 ff       	sbrs	r24, 1
    1e0e:	da d0       	rcall	.+436    	; 0x1fc4 <appStart>
    1e10:	85 e0       	ldi	r24, 0x05	; 5
    1e12:	8e bd       	out	0x2e, r24	; 46
    1e14:	82 e0       	ldi	r24, 0x02	; 2
    1e16:	8b b9       	out	0x0b, r24	; 11
    1e18:	88 e1       	ldi	r24, 0x18	; 24
    1e1a:	8a b9       	out	0x0a, r24	; 10
    1e1c:	86 e8       	ldi	r24, 0x86	; 134
    1e1e:	80 bd       	out	0x20, r24	; 32
    1e20:	80 e1       	ldi	r24, 0x10	; 16
    1e22:	89 b9       	out	0x09, r24	; 9
    1e24:	8e e0       	ldi	r24, 0x0E	; 14
    1e26:	ca d0       	rcall	.+404    	; 0x1fbc <watchdogConfig>
    1e28:	bd 9a       	sbi	0x17, 5	; 23
    1e2a:	96 e0       	ldi	r25, 0x06	; 6
    1e2c:	20 e3       	ldi	r18, 0x30	; 48
    1e2e:	3c ef       	ldi	r19, 0xFC	; 252
    1e30:	54 e0       	ldi	r21, 0x04	; 4
    1e32:	40 e2       	ldi	r20, 0x20	; 32
    1e34:	3d bd       	out	0x2d, r19	; 45
    1e36:	2c bd       	out	0x2c, r18	; 44
    1e38:	58 bf       	out	0x38, r21	; 56
    1e3a:	08 b6       	in	r0, 0x38	; 56
    1e3c:	02 fe       	sbrs	r0, 2
    1e3e:	fd cf       	rjmp	.-6      	; 0x1e3a <main+0x3a>
    1e40:	88 b3       	in	r24, 0x18	; 24
    1e42:	84 27       	eor	r24, r20
    1e44:	88 bb       	out	0x18, r24	; 24
    1e46:	a8 95       	wdr
    1e48:	91 50       	subi	r25, 0x01	; 1
    1e4a:	a1 f7       	brne	.-24     	; 0x1e34 <main+0x34>
    1e4c:	dd 24       	eor	r13, r13
    1e4e:	d3 94       	inc	r13
    1e50:	a5 e0       	ldi	r26, 0x05	; 5
    1e52:	ea 2e       	mov	r14, r26
    1e54:	f1 e1       	ldi	r31, 0x11	; 17
    1e56:	ff 2e       	mov	r15, r31
    1e58:	a7 d0       	rcall	.+334    	; 0x1fa8 <getch>
    1e5a:	81 34       	cpi	r24, 0x41	; 65
    1e5c:	21 f4       	brne	.+8      	; 0x1e66 <main+0x66>
    1e5e:	81 e0       	ldi	r24, 0x01	; 1
    1e60:	bc d0       	rcall	.+376    	; 0x1fda <getNch>
    1e62:	83 e0       	ldi	r24, 0x03	; 3
    1e64:	20 c0       	rjmp	.+64     	; 0x1ea6 <main+0xa6>
    1e66:	82 34       	cpi	r24, 0x42	; 66
    1e68:	11 f4       	brne	.+4      	; 0x1e6e <main+0x6e>
    1e6a:	84 e1       	ldi	r24, 0x14	; 20
    1e6c:	03 c0       	rjmp	.+6      	; 0x1e74 <main+0x74>
    1e6e:	85 34       	cpi	r24, 0x45	; 69
    1e70:	19 f4       	brne	.+6      	; 0x1e78 <main+0x78>
    1e72:	85 e0       	ldi	r24, 0x05	; 5
    1e74:	b2 d0       	rcall	.+356    	; 0x1fda <getNch>
    1e76:	91 c0       	rjmp	.+290    	; 0x1f9a <main+0x19a>
    1e78:	85 35       	cpi	r24, 0x55	; 85
    1e7a:	81 f4       	brne	.+32     	; 0x1e9c <main+0x9c>
    1e7c:	95 d0       	rcall	.+298    	; 0x1fa8 <getch>
    1e7e:	08 2f       	mov	r16, r24
    1e80:	10 e0       	ldi	r17, 0x00	; 0
    1e82:	92 d0       	rcall	.+292    	; 0x1fa8 <getch>
    1e84:	90 e0       	ldi	r25, 0x00	; 0
    1e86:	98 2f       	mov	r25, r24
    1e88:	88 27       	eor	r24, r24
    1e8a:	80 2b       	or	r24, r16
    1e8c:	91 2b       	or	r25, r17
    1e8e:	88 0f       	add	r24, r24
    1e90:	99 1f       	adc	r25, r25
    1e92:	90 93 81 01 	sts	0x0181, r25
    1e96:	80 93 80 01 	sts	0x0180, r24
    1e9a:	7e c0       	rjmp	.+252    	; 0x1f98 <main+0x198>
    1e9c:	86 35       	cpi	r24, 0x56	; 86
    1e9e:	29 f4       	brne	.+10     	; 0x1eaa <main+0xaa>
    1ea0:	84 e0       	ldi	r24, 0x04	; 4
    1ea2:	9b d0       	rcall	.+310    	; 0x1fda <getNch>
    1ea4:	80 e0       	ldi	r24, 0x00	; 0
    1ea6:	7c d0       	rcall	.+248    	; 0x1fa0 <putch>
    1ea8:	78 c0       	rjmp	.+240    	; 0x1f9a <main+0x19a>
    1eaa:	84 36       	cpi	r24, 0x64	; 100
    1eac:	09 f0       	breq	.+2      	; 0x1eb0 <main+0xb0>
    1eae:	4e c0       	rjmp	.+156    	; 0x1f4c <main+0x14c>
    1eb0:	80 d0       	rcall	.+256    	; 0x1fb2 <getLen>
    1eb2:	e0 91 80 01 	lds	r30, 0x0180
    1eb6:	f0 91 81 01 	lds	r31, 0x0181
    1eba:	88 e1       	ldi	r24, 0x18	; 24
    1ebc:	e0 30       	cpi	r30, 0x00	; 0
    1ebe:	f8 07       	cpc	r31, r24
    1ec0:	18 f4       	brcc	.+6      	; 0x1ec8 <main+0xc8>
    1ec2:	83 e0       	ldi	r24, 0x03	; 3
    1ec4:	87 bf       	out	0x37, r24	; 55
    1ec6:	e8 95       	spm
    1ec8:	c0 e0       	ldi	r28, 0x00	; 0
    1eca:	d1 e0       	ldi	r29, 0x01	; 1
    1ecc:	6d d0       	rcall	.+218    	; 0x1fa8 <getch>
    1ece:	89 93       	st	Y+, r24
    1ed0:	80 91 82 01 	lds	r24, 0x0182
    1ed4:	81 50       	subi	r24, 0x01	; 1
    1ed6:	80 93 82 01 	sts	0x0182, r24
    1eda:	88 23       	and	r24, r24
    1edc:	b9 f7       	brne	.-18     	; 0x1ecc <main+0xcc>
    1ede:	e0 91 80 01 	lds	r30, 0x0180
    1ee2:	f0 91 81 01 	lds	r31, 0x0181
    1ee6:	88 e1       	ldi	r24, 0x18	; 24
    1ee8:	e0 30       	cpi	r30, 0x00	; 0
    1eea:	f8 07       	cpc	r31, r24
    1eec:	18 f0       	brcs	.+6      	; 0x1ef4 <main+0xf4>
    1eee:	83 e0       	ldi	r24, 0x03	; 3
    1ef0:	87 bf       	out	0x37, r24	; 55
    1ef2:	e8 95       	spm
    1ef4:	6c d0       	rcall	.+216    	; 0x1fce <verifySpace>
    1ef6:	07 b6       	in	r0, 0x37	; 55
    1ef8:	00 fc       	sbrc	r0, 0
    1efa:	fd cf       	rjmp	.-6      	; 0x1ef6 <main+0xf6>
    1efc:	40 91 80 01 	lds	r20, 0x0180
    1f00:	50 91 81 01 	lds	r21, 0x0181
    1f04:	a0 e0       	ldi	r26, 0x00	; 0
    1f06:	b1 e0       	ldi	r27, 0x01	; 1
    1f08:	2c 91       	ld	r18, X
    1f0a:	30 e0       	ldi	r19, 0x00	; 0
    1f0c:	11 96       	adiw	r26, 0x01	; 1
    1f0e:	8c 91       	ld	r24, X
    1f10:	11 97       	sbiw	r26, 0x01	; 1
    1f12:	90 e0       	ldi	r25, 0x00	; 0
    1f14:	98 2f       	mov	r25, r24
    1f16:	88 27       	eor	r24, r24
    1f18:	82 2b       	or	r24, r18
    1f1a:	93 2b       	or	r25, r19
    1f1c:	12 96       	adiw	r26, 0x02	; 2
    1f1e:	fa 01       	movw	r30, r20
    1f20:	0c 01       	movw	r0, r24
    1f22:	d7 be       	out	0x37, r13	; 55
    1f24:	e8 95       	spm
    1f26:	11 24       	eor	r1, r1
    1f28:	4e 5f       	subi	r20, 0xFE	; 254
    1f2a:	5f 4f       	sbci	r21, 0xFF	; 255
    1f2c:	f1 e0       	ldi	r31, 0x01	; 1
    1f2e:	a0 34       	cpi	r26, 0x40	; 64
    1f30:	bf 07       	cpc	r27, r31
    1f32:	51 f7       	brne	.-44     	; 0x1f08 <main+0x108>
    1f34:	e0 91 80 01 	lds	r30, 0x0180
    1f38:	f0 91 81 01 	lds	r31, 0x0181
    1f3c:	e7 be       	out	0x37, r14	; 55
    1f3e:	e8 95       	spm
    1f40:	07 b6       	in	r0, 0x37	; 55
    1f42:	00 fc       	sbrc	r0, 0
    1f44:	fd cf       	rjmp	.-6      	; 0x1f40 <main+0x140>
    1f46:	f7 be       	out	0x37, r15	; 55
    1f48:	e8 95       	spm
    1f4a:	27 c0       	rjmp	.+78     	; 0x1f9a <main+0x19a>
    1f4c:	84 37       	cpi	r24, 0x74	; 116
    1f4e:	b9 f4       	brne	.+46     	; 0x1f7e <main+0x17e>
    1f50:	30 d0       	rcall	.+96     	; 0x1fb2 <getLen>
    1f52:	3d d0       	rcall	.+122    	; 0x1fce <verifySpace>
    1f54:	e0 91 80 01 	lds	r30, 0x0180
    1f58:	f0 91 81 01 	lds	r31, 0x0181
    1f5c:	31 96       	adiw	r30, 0x01	; 1
    1f5e:	f0 93 81 01 	sts	0x0181, r31
    1f62:	e0 93 80 01 	sts	0x0180, r30
    1f66:	31 97       	sbiw	r30, 0x01	; 1
    1f68:	e4 91       	lpm	r30, Z+
    1f6a:	8e 2f       	mov	r24, r30
    1f6c:	19 d0       	rcall	.+50     	; 0x1fa0 <putch>
    1f6e:	80 91 82 01 	lds	r24, 0x0182
    1f72:	81 50       	subi	r24, 0x01	; 1
    1f74:	80 93 82 01 	sts	0x0182, r24
    1f78:	88 23       	and	r24, r24
    1f7a:	61 f7       	brne	.-40     	; 0x1f54 <main+0x154>
    1f7c:	0e c0       	rjmp	.+28     	; 0x1f9a <main+0x19a>
    1f7e:	85 37       	cpi	r24, 0x75	; 117
    1f80:	39 f4       	brne	.+14     	; 0x1f90 <main+0x190>
    1f82:	25 d0       	rcall	.+74     	; 0x1fce <verifySpace>
    1f84:	8e e1       	ldi	r24, 0x1E	; 30
    1f86:	0c d0       	rcall	.+24     	; 0x1fa0 <putch>
    1f88:	83 e9       	ldi	r24, 0x93	; 147
    1f8a:	0a d0       	rcall	.+20     	; 0x1fa0 <putch>
    1f8c:	87 e0       	ldi	r24, 0x07	; 7
    1f8e:	8b cf       	rjmp	.-234    	; 0x1ea6 <main+0xa6>
    1f90:	81 35       	cpi	r24, 0x51	; 81
    1f92:	11 f4       	brne	.+4      	; 0x1f98 <main+0x198>
    1f94:	88 e0       	ldi	r24, 0x08	; 8
    1f96:	12 d0       	rcall	.+36     	; 0x1fbc <watchdogConfig>
    1f98:	1a d0       	rcall	.+52     	; 0x1fce <verifySpace>
    1f9a:	80 e1       	ldi	r24, 0x10	; 16
    1f9c:	01 d0       	rcall	.+2      	; 0x1fa0 <putch>
    1f9e:	5c cf       	rjmp	.-328    	; 0x1e58 <main+0x58>

00001fa0 <putch>:
  }
}

void putch(char ch) {
#ifndef SOFT_UART
  while (!(UCSR0A & _BV(UDRE0)));
    1fa0:	5d 9b       	sbis	0x0b, 5	; 11
    1fa2:	fe cf       	rjmp	.-4      	; 0x1fa0 <putch>
  UDR0 = ch;
    1fa4:	8c b9       	out	0x0c, r24	; 12
      [uartBit] "I" (UART_TX_BIT)
    :
      "r25"
  );
#endif
}
    1fa6:	08 95       	ret

00001fa8 <getch>:
  return getch();
}

// Watchdog functions. These are only safe with interrupts turned off.
void watchdogReset() {
  __asm__ __volatile__ (
    1fa8:	a8 95       	wdr
      [uartBit] "I" (UART_RX_BIT)
    :
      "r25"
);
#else
  while(!(UCSR0A & _BV(RXC0)));
    1faa:	5f 9b       	sbis	0x0b, 7	; 11
    1fac:	fe cf       	rjmp	.-4      	; 0x1faa <getch+0x2>
  ch = UDR0;
    1fae:	8c b1       	in	r24, 0x0c	; 12
  LED_PIN |= _BV(LED);
#endif
#endif

  return ch;
}
    1fb0:	08 95       	ret

00001fb2 <getLen>:
  } while (--count);
}
#endif

uint8_t getLen() {
  getch();
    1fb2:	fa df       	rcall	.-12     	; 0x1fa8 <getch>
  length = getch();
    1fb4:	f9 df       	rcall	.-14     	; 0x1fa8 <getch>
    1fb6:	80 93 82 01 	sts	0x0182, r24
  return getch();
    1fba:	f6 cf       	rjmp	.-20     	; 0x1fa8 <getch>

00001fbc <watchdogConfig>:
    "wdr\n"
  );
}

void watchdogConfig(uint8_t x) {
  WDTCSR = _BV(WDCE) | _BV(WDE);
    1fbc:	98 e1       	ldi	r25, 0x18	; 24
    1fbe:	91 bd       	out	0x21, r25	; 33
  WDTCSR = x;
    1fc0:	81 bd       	out	0x21, r24	; 33
}
    1fc2:	08 95       	ret

00001fc4 <appStart>:

void appStart() {
  watchdogConfig(WATCHDOG_OFF);
    1fc4:	80 e0       	ldi	r24, 0x00	; 0
    1fc6:	fa df       	rcall	.-12     	; 0x1fbc <watchdogConfig>
  __asm__ __volatile__ (
    1fc8:	ee 27       	eor	r30, r30
    1fca:	ff 27       	eor	r31, r31
    1fcc:	09 94       	ijmp

00001fce <verifySpace>:
  do getch(); while (--count);
  verifySpace();
}

void verifySpace() {
  if (getch() != CRC_EOP) appStart();
    1fce:	ec df       	rcall	.-40     	; 0x1fa8 <getch>
    1fd0:	80 32       	cpi	r24, 0x20	; 32
    1fd2:	09 f0       	breq	.+2      	; 0x1fd6 <verifySpace+0x8>
    1fd4:	f7 df       	rcall	.-18     	; 0x1fc4 <appStart>
  putch(STK_INSYNC);
    1fd6:	84 e1       	ldi	r24, 0x14	; 20
    1fd8:	e3 cf       	rjmp	.-58     	; 0x1fa0 <putch>

00001fda <getNch>:
    ::[count] "M" (UART_B_VALUE)
  );
}
#endif

void getNch(uint8_t count) {
    1fda:	1f 93       	push	r17
    1fdc:	18 2f       	mov	r17, r24
  do getch(); while (--count);
    1fde:	e4 df       	rcall	.-56     	; 0x1fa8 <getch>
    1fe0:	11 50       	subi	r17, 0x01	; 1
    1fe2:	e9 f7       	brne	.-6      	; 0x1fde <getNch+0x4>
  verifySpace();
    1fe4:	f4 df       	rcall	.-24     	; 0x1fce <verifySpace>
}
    1fe6:	1f 91       	pop	r17
    1fe8:	08 95       	ret
